{
    "ConnectionStrings": {
        "MsSQL": "Data Source=localhost;Initial Catalog=ecommerce;User ID=sa;Password=MssqlPassword1.;Connect Timeout=30;Encrypt=False;Trust Server Certificate=False;Application Intent=ReadWrite;Multi Subnet Failover=False"
    },
    "JwtSettings": {
        "Secret": "mysecretkeymysecretkeymysecretkeymysecretkey",
        "Issuer": "ecommerce.api",
        "Audience": "ecommerce.ui",
        "ExpiryMinutes": 15,
        "RefreshTokenTTL": 30
    },
    "EmailSettings": {
        "EnableEmailNotifications": false,
        "DefaultFromEmail": "default@gmail.com",
        "SmtpSettings": {
            "Server": "smtp.gmail.com",
            "Port": 587,
            "Username": "default@gmail.com",
            "Password": "default#password"
        }
    },
    "Serilog": {
        "Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.Async", "Serilog.Sinks.Seq", "Serilog.Sinks.Elasticsearch" /*,"Serilog.Sinks.File"*/ ],
        "MinimumLevel": {
            "Default": "Debug",
            "Override": {
                "Microsoft.Hosting.Lifetime": "Information"
                //"Microsoft": "Warning",
                //"System": "Error",
                //"Microsoft.EntityFrameworkCore": "Warning",
                //"Microsoft.AspNetCore": "Warning",
                //"Hangfire": "Information"
            }
        },
        "LevelSwitches": { "controlSwitch": "Verbose" },
        "WriteTo": [
            {
                "Name": "Async",
                "Args": {
                    "configure": [
                        {
                            "Name": "Console",
                            "Args": {
                                "theme": "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Code, Serilog.Sinks.Console",
                                "formatter": "Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact",
                                "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:uf3}] {Message:lj} <s:{SourceContext}>{NewLine}"
                                //"outputTemplate": "[{Timestamp:HH:mm:ss} {Level:uf3}] {Message:lj} <s:{SourceContext}>{NewLine}{Exception}",
                            }
                        },
                        {
                            "Name": "Seq",
                            "Args": {
                                "serverUrl": "http://localhost:5341",
                                "apiKey": "yeEZyL3SMcxEKUijBjN",
                                "controlLevelSwitch": "$controlSwitch"
                            }
                        }
                    ]
                }
            },
            {
                "Name": "File",
                "Args": {
                    "path": "logs/log-.txt",
                    "rollingInterval": "Day",
                    "outputTemplate": "{Timestamp:o} [{Level:uf3}] ({Application}/{MachineName}/{ThreadId}) {Message}{NewLine}{Exception}",
                    "rollOnFileSizeLimit": true,
                    "formatter": "Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact"
                }
            },
            {
                "Name": "Elasticsearch",
                "Args": {
                    "nodeUris": "http://localhost:9200", //"http://localhost:9200;http://remotehost:9200/",
                    "indexFormat": "custom-index-{0:yyyy.MM}",
                    "templateName": "myCustomTemplate",
                    "typeName": "myCustomLogEventType",
                    "pipelineName": "myCustomPipelineName",
                    "batchPostingLimit": 50,
                    "batchAction": "Create",
                    "period": 2,
                    "inlineFields": true,
                    "restrictedToMinimumLevel": "Debug",
                    //"bufferBaseFilename": "C:/Temp/docker-elk-serilog-web-buffer",
                    "bufferFileSizeLimitBytes": 5242880,
                    "bufferLogShippingInterval": 5000,
                    "bufferRetainedInvalidPayloadsLimitBytes": 5000,
                    "bufferFileCountLimit": 31,
                    "connectionGlobalHeaders": "Authorization=Bearer SOME-TOKEN;OtherHeader=OTHER-HEADER-VALUE",
                    "connectionTimeout": 5,
                    "emitEventFailure": "WriteToSelfLog",
                    "queueSizeLimit": "100000",
                    //"autoRegisterTemplate": true,
                    //"autoRegisterTemplateVersion": "ESv2",
                    //"overwriteTemplate": false,
                    "registerTemplateFailure": "IndexAnyway",
                    "deadLetterIndexName": "deadletter-{0:yyyy.MM}",
                    "numberOfShards": 20,
                    "numberOfReplicas": 10,
                    "templateCustomSettings": [ { "index.mapping.total_fields.limit": "10000000" } ]
                    //"formatProvider": "Serilog.Formatting.Elasticsearch, Serilog.Formatting"
                    //"connection": "My.Namespace.MyConnection, My.Assembly.Name",
                    //"serializer": "My.Namespace.MySerializer, My.Assembly.Name",
                    //"connectionPool": "My.Namespace.MyConnectionPool, My.Assembly.Name",
                    //"customFormatter": "My.Namespace.MyCustomFormatter, My.Assembly.Name",
                    //"customDurableFormatter": "My.Namespace.MyCustomDurableFormatter, My.Assembly.Name",
                    //"failureSink": "My.Namespace.MyFailureSink, My.Assembly.Name"
                }
            }
        ],
        "Enrich": [
            "FromLogContext",
            "WithMachineName",
            "WithProcessId",
            "WithThreadId",
            "WithClientIp",
            "WithCorrelationId",
            "WithUserAgent",
            "WithVersion"
        ],
        "Destructure": [
            {
                "Name": "ToMaximumDepth",
                "Args": { "maximumDestructuringDepth": 4 }
            },
            {
                "Name": "ToMaximumStringLength",
                "Args": { "maximumStringLength": 100 }
            },
            {
                "Name": "ToMaximumCollectionCount",
                "Args": { "maximumCollectionCount": 10 }
            }
        ],
        "Properties": {
            "Application": "ecommerce.api",
            "Environment": "Development"
        }
    }
}